Module parsersupport.T

use seq.stkele.T

use stack.stkele.T

use otherseq.token.T

use seq.token.T

use format

use standard

use set.word

type token is record w:word, tokenno:int, attribute:T

type stkele is record stateno:int,  attribute:T

type reduction is record toseq:seq.stkele.T

Export type:reduction.T

Export type:token.T

unbound attribute:T(seq.word)T

unbound action(int, seq.word,int, reduction.T)T

unbound text(T)seq.word

unbound forward(stk:T, T)T


Function ?(a:token.T, b:token.T)ordering w.a ? w.b

Function =(a:token.T, b:token.T)boolean w.a = w.b

Function_(r:reduction.T, n:int)T attribute.(toseq.r)_n

Function last(r:reduction.T)T attribute.(toseq.r)_(length.toseq.r)

Function errormessage:T(message:seq.word, input:seq.word, place:int)seq.word
 let m="&{ literal" +message+"&} "
  m + " &br  &br" + prettynoparse(subseq(input, 1, place) )
  + " &br"
  + m

     
type lrstate is record     lrpart:stack.stkele.T, matchthis: word, last:int,instring:boolean

 
function advance(state:lrstate.T,this:word,idx:int,input:seq.word,lextab:seq.token.T) lrstate.T
    let lrpart=lrpart.state
    let matchthis= matchthis.state
    let last=last.state
    let instring=instring.state
    let  newinstring=  if instring then this &ne  matchthis 
                  else this  = "//"_1 &or this  = "'"_1 &or this  =  '"'_1 &or this="\\"_1
    let newlast =  if instring then last else idx
    let newmatchthis = if instring then matchthis else this 
    let newlrpart= if newinstring then 
     // in comment or string //
       lrpart  
    else  let lexindex = binarysearch(lextab, token(this, 0, attribute:T("")))
          if lexindex < 0 then
             // next is not in lex table //
            let kind = checkinteger.this
            assert  kind &ne "ILLEGAL"_1  report  "Illegal character in Integer" + this
             step(lrpart,input
                   ,attribute:T([ this])
                   ,if kind="WORD"_1 then Wtoken:T else Itoken:T
                   ,idx) 
         else    
            let tok=   lextab_lexindex  
            step(lrpart,input, if instring then attribute:T(subseq(input, last, idx)) else attribute.tok,tokenno.tok,idx) 
      lrstate( newlrpart,newmatchthis,newlast,newinstring)
           

function step( stk:stack.stkele.T,input:seq.word, attrib:T,tokenno:int,place:int)stack.stkele.T
 let stateno = stateno.top.stk
 let actioncode = actiontable:T_(tokenno  + length.tokenlist:T * stateno)
  if actioncode > 0 then
  if stateno = 2 then stk
   else push(stk, stkele(actioncode,   forward(attribute.top.stk, attrib )))
  else
   assert actioncode < 0 report errormessage:T(if text.attrib = "#"  then"parse error:unexpected end of paragraph"
   else"parse error state",  input, place )
   + " &br"
   + expect:T(stateno)
   let ruleno =-actioncode
   let rulelen = rulelength:T_ruleno
   let newstk = pop(stk, rulelen)
   let newstateno = actiontable:T_(leftside:T_ruleno + length.tokenlist:T * stateno.top.newstk)
    assert newstateno > 0 report"????"
    let newstkele = stkele(newstateno,   action(ruleno, input, place ,reduction.top(stk, rulelen)))
     step( push(newstk, newstkele),input, attrib,tokenno,place)

function expect:T(stateno:int)seq.word
 let l = arithseq(length.tokenlist:T, 1, 1) @ +("", kk:T(stateno, @e))
  "Expecting:" + toseq(asset.l ∩ asset."]})else then report")

function kk:T(stateno:int, token:int)seq.word
 if 0 ≠ actiontable:T_(length.tokenlist:T * stateno + token)then [ tokenlist:T_token]
 else empty:seq.word


function tokenx(tokenno:int, attribute:T)token.T token("??"_1, tokenno, attribute)

Function parse:T(input:seq.word)T
 // if parse is called many times caching lextable improves performance // 
 parse:T(attribute:T(""), sort.lextable:T, input)

Function parse:T(initial:T, lextable:seq.token.T, input:seq.word)T
let state0=lrstate(push(empty:stack.stkele.T, stkele(startstate:T,   initial))
    , "'"_1,0,false)
 let state=  
  for( e &in input + "#" ,acc=state0,i,false) advance(acc,e,i,input,lextable)
 attribute.top.lrpart.state 
 
Function sortedlextable:T seq.token.T sort.lextable:T

function Wtoken:T int // generated by genlex module in tools // 33 

function Itoken:T int // generated by genlex module in tools // 37 

function lextable:T seq.token.T // generated by genlex module in tools // [ 
  token("#"_1, 19, attribute:T("#")) 
, token("$wordlist"_1, 33, attribute:T("$wordlist")) 
, token("'"_1, 28, attribute:T("'")) 
, token("("_1, 3, attribute:T("(")) 
, token(")"_1, 4, attribute:T(")")) 
, token("*"_1, 27, attribute:T("*")) 
, token("+"_1, 8, attribute:T("+")) 
, token(","_1, 12, attribute:T(",")) 
, token("-"_1, 8, attribute:T("-")) 
, token("."_1, 1, attribute:T(".")) 
, token("/"_1, 27, attribute:T("/")) 
, token("//"_1,11, attribute:T("//")) 
, token("\\"_1,11, attribute:T("\\")) 
, token("0"_1, 37, attribute:T("0")) 
, token("2"_1, 37, attribute:T("2")) 
, token(":"_1, 5, attribute:T(":")) 
, token("<"_1, 6, attribute:T("<")) 
, token("<<"_1, 27, attribute:T("<<")) 
, token("="_1, 2, attribute:T("=")) 
, token(">"_1, 6, attribute:T(">")) 
, token(">>"_1, 27, attribute:T(">>")) 
, token("?"_1, 6, attribute:T("?")) 
, token("@"_1, 15, attribute:T("@")) 
, token("A"_1, 33, attribute:T("A")) 
, token("B"_1, 33, attribute:T("B")) 
, token("D"_1, 33, attribute:T("D")) 
, token("E"_1, 33, attribute:T("E")) 
, token("F"_1, 33, attribute:T("F")) 
, token("FP"_1, 33, attribute:T("FP")) 
, token("Function"_1, 33, attribute:T("Function")) 
, token("G"_1, 33, attribute:T("G")) 
, token("I"_1, 33, attribute:T("I")) 
, token("L"_1, 33, attribute:T("L")) 
, token("N"_1, 33, attribute:T("N")) 
, token("NM"_1, 33, attribute:T("NM")) 
, token("P"_1, 33, attribute:T("P")) 
, token("T"_1, 33, attribute:T("T")) 
, token("W"_1, 33, attribute:T("W")) 
, token("["_1, 13, attribute:T("[")) 
, token("]"_1, 7, attribute:T("]")) 
, token("^"_1, 14, attribute:T("^")) 
, token("_"_1, 14, attribute:T("_")) 
, token("a"_1, 33, attribute:T("a")) 
, token("assert"_1, 23, attribute:T("assert")) 
, token("comment"_1, 33, attribute:T("comment")) 
, token("else"_1, 21, attribute:T("else")) 
, token("empty"_1, 33, attribute:T("empty")) 
, token("for"_1, 41, attribute:T("for")) 
, token("function"_1, 33, attribute:T("function")) 
, token("i"_1, 33, attribute:T("i")) 
, token("if"_1, 18, attribute:T("if")) 
, token("in"_1, 8, attribute:T("in")) 
, token("inst"_1, 33, attribute:T("inst")) 
, token("int"_1, 33, attribute:T("int")) 
, token("is"_1, 16, attribute:T("is")) 
, token("let"_1, 22, attribute:T("let")) 
, token("mod"_1, 27, attribute:T("mod")) 
, token("mytype"_1, 33, attribute:T("mytype")) 
, token("report"_1, 24, attribute:T("report")) 
, token("seq"_1, 33, attribute:T("seq")) 
, token("then"_1, 20, attribute:T("then")) 
, token("use"_1, 33, attribute:T("use")) 
, token("word"_1, 33, attribute:T("word")) 
, token("{"_1, 9, attribute:T("{")) 
, token("}"_1, 10, attribute:T("}")) 
, token("∈"_1, 8, attribute:T("∈")) 
, token("∉"_1, 8, attribute:T("∉")) 
, token("∧"_1, 25, attribute:T("∧")) 
, token("∨"_1, 26, attribute:T("∨")) 
, token("∩"_1, 27, attribute:T("∩")) 
, token("∪"_1, 27, attribute:T("∪")) 
, token("≠"_1, 6, attribute:T("≠")) 
, token("≤"_1, 6, attribute:T("≤")) 
, token("≥"_1, 6, attribute:T("≥")) 
, token('"'_1, 28, attribute:T('"')) 
, token(merge("&"+"and"), 25, attribute:T("∧")) 
, token(merge("&"+"cap"), 27, attribute:T("∩")) 
, token(merge("&"+"cup"), 27, attribute:T("∪")) 
, token(merge("&"+"ge"), 6, attribute:T("≥")) 
, token(merge("&"+"in"), 8, attribute:T("∈")) 
, token(merge("&"+"le"), 6, attribute:T("≤")) 
, token(merge("&"+"ne"), 6, attribute:T("≠")) 
, token(merge("&"+"nin"), 8, attribute:T("∉")) 
, token(merge("&"+"or"), 26, attribute:T("∨"))]

function rulelength:T seq.int [ 2, 7, 7, 4, 5, 1, 1, 1, 3, 3, 5, 4, 6, 1, 4, 3, 3, 6, 3, 2, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 4, 2, 5, 1, 3, 1, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 6, 6, 3, 6, 11, 9, 3, 5]

function leftside:T seq.int [ 31, 32, 32, 32, 32, 32, 38, 34, 34, 34, 34, 34, 34, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 36, 36, 30, 29, 30, 30, 30, 30, 17, 17, 30, 30, 35, 35, 35, 35, 35, 35, 35, 39, 39, 40, 40, 30, 30, 42, 42, 30, 30]

function tokenlist:T seq.word".=():>]-{ } comment, [_@ is T if # then else let assert report ∧ ∨ * $wordlist A E G F W P N L I FP NM D for B"

function startstate:T int 1

function finalstate:T int 2

noactions 2297 
nosymbols:42 
norules 56 
nostate 146

function actiontable:T seq.int [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 8, -36, -36, 0, 9, -36, 11, -36, -36, -36, -36, -36, 15, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, 13, 14, 6, -36, -36, -36, 0, 0, 10, 0, 7, 0, -36, 0, 16, -36, -36, -36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -47, -47, -47, 18, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, 0, 0, -47, 0, 0, 0, -47, 0, -47, -47, -47, -47, 0, 0, -41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 25, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -37, -37, -37, 0, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, 0, 0, -37, 0, 0, 0, -37, 0, -37, -37, -37, -37, 12, -36, -36, -36, 0, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, 0, 0, -36, 0, 0, 0, -36, 0, -36, -36, -36, -36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 39, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 25, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, -36, -36, -36, 51, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, 0, 0, -36, 0, 0, 0, -36, 0, -36, -36, -36, -36, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -48, -48, -48, 0, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, 0, 0, -48, 0, 0, 0, -48, 0, -48, -48, -48, -48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 54, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -38, -38, -38, 0, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, 0, 0, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, 0, 0, -38, 0, 0, 0, -38, 0, -38, -38, -38, -38, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 59, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 60, -47, -47, -47, 18, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, 0, 0, -47, 0, 0, 0, -47, 0, -47, -47, -47, -47, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 62, 0, 0, 37, 0, 0, 61, 45, 0, 46, 38, 33, 35, 0, 64, 0, 0, 0, 65, 0, 66, 0, 0, 0, 0, 0, 70, 67, 0, 0, 0, -4, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 71, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 72, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 73, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 74, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 75, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 76, -34, -34, -34, 0, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, 0, 0, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, 0, 0, -34, 0, 0, 0, -34, 0, -34, -34, -34, -34, 0, -14, 77, -14, 0, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, 0, 0, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, 0, 0, -14, 0, 0, 0, -14, 0, -14, -14, -14, -14, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 62, 0, 0, 37, 0, 0, 78, 45, 0, 46, 38, 33, 35, 0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, -39, -39, 0, 65, -39, 66, -39, -39, -39, -39, -39, 70, 67, 0, 0, -39, -39, -39, -39, -39, -39, -39, 68, 69, 63, -39, -39, -39, 0, 0, -39, 0, 0, 0, -39, 0, -39, -39, -39, -39, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 88, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 89, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 64, 0, 0, 0, 65, 0, 66, 0, 0, 0, 0, 0, 70, 67, 0, 0, 0, 0, 0, 0, 0, 0, 90, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 91, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 0, 92, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, -28, 0, 65, -28, 66, 0, 0, 0, -28, 0, 70, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 94, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 95, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 96, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 97, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 8, 0, 0, 0, 9, 0, 11, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 6, 0, 0, 0, 0, 0, 10, 0, 98, 0, 0, 0, 99, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 100, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 101, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 102, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, -20, -20, -20, 0, -20, -20, -20, -20, -20, -20, -20, -20, 70, 67, 0, 0, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, 0, 0, -20, 0, 0, 0, -20, 0, -20, -20, -20, -20, 0, 64, -32, -32, 0, 65, -32, 66, -32, -32, -32, -32, -32, 70, 67, 0, 0, -32, -32, -32, -32, -32, -32, -32, 68, 69, 63, -32, -32, -32, 0, 0, -32, 0, 0, 0, -32, 0, -32, -32, -32, -32, 0, 64, 0, 0, 0, 65, 0, 66, 0, 0, 0, 0, 0, 70, 67, 0, 0, 0, 0, 103, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 65, 0, 66, 0, 104, 0, 0, 0, 70, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 105, 0, 65, 0, 66, 0, 0, 0, 0, 0, 70, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 62, 0, 0, 37, 0, 0, 107, 45, 0, 46, 38, 33, 35, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, -36, -36, -36, 112, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, 0, 0, -36, 0, 0, 0, -36, 0, -36, -36, -36, -36, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 113, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 114, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 0, 0, 0, 0, 0, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, -55, -55, 0, 65, -55, 66, -55, -55, -55, -55, -55, 70, 67, 0, 0, -55, -55, -55, -55, -55, -55, -55, 68, 69, 63, -55, -55, -55, 0, 0, -55, 0, 0, 0, -55, 0, -55, -55, -55, -55, 0, 64, 0, 116, 0, 65, 0, 66, 0, 0, 0, 0, 0, 70, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 117, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, -21, -21, -21, 0, -21, -21, -21, -21, -21, -21, -21, -21, 70, -21, 0, 0, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, 0, 0, -21, 0, 0, 0, -21, 0, -21, -21, -21, -21, 0, -51, 118, -51, 0, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, 0, 0, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, 0, 0, -51, 0, 0, 0, -51, 0, -51, -51, -51, -51, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 119, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, -22, -22, -22, 0, -22, -22, -22, -22, -22, -22, -22, -22, 70, -22, 0, 0, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, 0, 0, -22, 0, 0, 0, -22, 0, -22, -22, -22, -22, 0, -24, -24, -24, 0, -24, -24, 66, -24, -24, -24, -24, -24, 70, 67, 0, 0, -24, -24, -24, -24, -24, -24, -24, -24, -24, 63, -24, -24, -24, 0, 0, -24, 0, 0, 0, -24, 0, -24, -24, -24, -24, 0, -25, -25, -25, 0, -25, -25, 66, -25, -25, -25, -25, -25, 70, 67, 0, 0, -25, -25, -25, -25, -25, -25, -25, -25, -25, 63, -25, -25, -25, 0, 0, -25, 0, 0, 0, -25, 0, -25, -25, -25, -25, 0, -23, -23, -23, 0, -23, -23, -23, -23, -23, -23, -23, -23, 70, 67, 0, 0, -23, -23, -23, -23, -23, -23, -23, -23, -23, 63, -23, -23, -23, 0, 0, -23, 0, 0, 0, -23, 0, -23, -23, -23, -23, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, -26, -26, 0, 65, -26, 66, -26, -26, -26, -26, -26, 70, 67, 0, 0, -26, -26, -26, -26, -26, -26, -26, -26, -26, 63, -26, -26, -26, 0, 0, -26, 0, 0, 0, -26, 0, -26, -26, -26, -26, 0, 64, -27, -27, 0, 65, -27, 66, -27, -27, -27, -27, -27, 70, 67, 0, 0, -27, -27, -27, -27, -27, -27, -27, 68, -27, 63, -27, -27, -27, 0, 0, -27, 0, 0, 0, -27, 0, -27, -27, -27, -27, 0, -19, -19, -19, 0, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, 0, 0, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, 0, 0, -19, 0, 0, 0, -19, 0, -19, -19, -19, -19, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 122, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, -17, -17, -17, 0, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, 0, 0, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, 0, 0, -17, 0, 0, 0, -17, 0, -17, -17, -17, -17, 0, -16, -16, -16, 0, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, 0, 0, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, 0, 0, -16, 0, 0, 0, -16, 0, -16, -16, -16, -16, 0, -35, -35, -35, 0, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, 0, 0, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, 0, 0, -35, 0, 0, 0, -35, 0, -35, -35, -35, -35, 0, 0, 0, 123, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, -30, -30, 0, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, 0, 0, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, 0, 0, -30, 0, 0, 0, -30, 0, -30, -30, -30, -30, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 124, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, -12, 0, 0, 0, 0, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 65, 0, 66, 0, 0, 0, 0, 0, 70, 67, 0, 0, 0, -3, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, -31, 0, 0, 65, 0, 66, -31, 0, -31, 0, -31, 70, 67, 0, 0, -31, 0, 0, 0, -31, -31, 0, 68, 69, 63, -31, -31, -31, 0, 0, -31, 0, 0, 0, -31, 0, -31, -31, -31, -31, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 127, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 128, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 64, 44, 0, 0, 65, 0, 130, 43, 0, 31, 0, 47, 70, 67, 0, 0, 42, 0, 0, 0, 32, 36, 0, 68, 69, 63, 34, 41, 129, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 131, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 64, 0, -29, 0, 65, -29, 66, 0, 0, 0, -29, 0, 70, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 132, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 133, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 64, 0, 0, 0, 65, 0, 66, 0, 0, 0, 0, 0, 70, 67, 0, 0, 0, 0, 0, 134, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, -15, -15, 0, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, 0, 0, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, 0, 0, -15, 0, 0, 0, -15, 0, -15, -15, -15, -15, 0, 64, 0, 0, 0, 65, 0, 66, 0, 0, 0, 0, 0, 70, 67, 0, 0, 0, -2, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 65, 0, 66, 0, 0, 0, 136, 0, 70, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, -56, -56, 0, 65, -56, 66, -56, -56, -56, -56, -56, 70, 67, 0, 0, -56, -56, -56, -56, -56, -56, -56, 68, 69, 63, -56, -56, -56, 0, 0, -56, 0, 0, 0, -56, 0, -56, -56, -56, -56, 0, 64, -33, -33, 0, 65, -33, 66, -33, -33, -33, -33, -33, 70, 67, 0, 0, -33, -33, -33, -33, -33, -33, -33, 68, 69, 63, -33, -33, -33, 0, 0, -33, 0, 0, 0, -33, 0, -33, -33, -33, -33, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 137, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 64, 0, 138, 0, 65, 0, 66, 0, 0, 0, 0, 0, 70, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 65, 0, 66, 0, 0, 0, 139, 0, 70, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 65, 0, 66, 0, 0, 0, 140, 0, 70, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 141, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 0, 0, -13, 0, 0, 0, 0, 0, 0, 0, -13, 0, 0, 0, 0, 0, 0, -13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -23, -23, -23, 0, -23, -23, -23, -23, -23, -23, -23, -23, 70, 67, 0, 0, -23, -23, -23, -23, -23, -23, -23, -23, -23, -20, -23, -23, -23, 0, 0, -23, 0, 0, 0, -23, 0, -23, -23, -23, -23, 0, -52, -52, -52, 0, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, 0, 0, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, 0, 0, -52, 0, 0, 0, -52, 0, -52, -52, -52, -52, 0, 0, -50, 0, 0, 0, 0, -50, -50, 0, -50, 0, -50, 0, 0, 0, 0, -50, 0, 0, 0, -50, -50, 0, 0, 0, 0, -50, -50, -50, 0, 0, -50, 0, 0, -50, -50, 0, -50, -50, -50, -50, 0, 0, -49, 0, 0, 0, 0, -49, -49, 0, -49, 0, -49, 0, 0, 0, 0, -49, 0, 0, 0, -49, -49, 0, 0, 0, 0, -49, -49, -49, 0, 0, -49, 0, 0, -49, -49, 0, -49, -49, -49, -49, 0, 64, -18, -18, 0, 65, -18, 66, -18, -18, -18, -18, -18, 70, 67, 0, 0, -18, -18, -18, -18, -18, -18, -18, 68, 69, 63, -18, -18, -18, 0, 0, -18, 0, 0, 0, -18, 0, -18, -18, -18, -18, 0, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 40, 43, 0, 31, 0, 47, 0, 0, 0, 0, 42, 0, 0, 0, 32, 36, 0, 0, 0, 0, 34, 41, 144, 0, 0, 37, 0, 0, 0, 45, 0, 46, 38, 33, 35, 0, 64, 0, -54, 0, 65, 0, 66, 0, 0, 0, 145, 0, 70, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 69, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -53, 0, 0, 0, 0, 0, 0, 0, -53]


