Module parsersupport.T

use seq.stkele.T

use stack.stkele.T

use otherseq.token.T

use seq.token.T

use format

use stdlib

use set.word

type token is record w:word, tokenno:int, attribute:T

type stkele is record stateno:int, place:int, attribute:T

type reduction is record toseq:seq.stkele.T

Export type:reduction.T

Export type:token.T

unbound attribute:T(seq.word)T

unbound action(int, seq.token.T, reduction.T)T

unbound text(T)seq.word

unbound forward(stk:T, T)T

Function text2(t:token.T)seq.word text.attribute.t

Function ?(a:token.T, b:token.T)ordering w.a ? w.b

Function =(a:token.T, b:token.T)boolean w.a = w.b

Function_(r:reduction.T, n:int)T attribute.(toseq.r)_n

Function last(r:reduction.T)T attribute.(toseq.r)_(length.toseq.r)

Function errormessage(message:seq.word, input:seq.token.T, place:int)seq.word
 message + " &br" + prettynoparse.@(+, text2,"", subseq(input, 1, place))

function tokenstream(lextab:seq.token.T, input:seq.word, i:int, result:seq.token.T)seq.token.T
let divop=27
 if i > length.input then result
 else
  let next = input_i
  let lexindex = binarysearch(lextab, token(next, 0, attribute:T("")))
   if lexindex < 0 then
   // next is not in lex table //
    let kind = checkinteger.next
     if kind = "WORD"_1 then
     tokenstream(lextab, input, i + 1, result + token(Wtoken:T, attribute:T([ next])))
     else
      let newresult = result + token(Itoken:T, attribute:T([ next]))
       assert kind = "INTEGER"_1 report errormessage("Illegal character in Integer" + next, newresult, length.newresult)
        tokenstream(lextab, input, i + 1, newresult)
   else
    let act = lextab_lexindex
     if tokenno.act = Itoken:T then
     tokenstream(lextab, input, i + 1, result + token(Itoken:T, attribute:T([ next])))
     else if tokenno.act = 0 then
     if next = "/"_1 then
      let j = consumecomment(input, i)
        if j = i then
        let tmp = token("/"_1, divop, attribute:T("/"))
          tokenstream(lextab, input, j + 1, result + tmp)
        else
         assert j < length.input report errormessage("No matching //", result + token(0, attribute:T([ next])), length.result + 1)
         let tmp = token(commenttoken:T, attribute:T(subseq(input, i, j - 1)))
          tokenstream(lextab, input, j, result + tmp)
      else
       let j = findindex(next, input, i + 1)
        assert j < length.input report errormessage("No matching" + next, result + token(0, attribute:T([ next])), length.result + 1)
        let tmp = token(if next = "//"_1 then commenttoken:T else stringtoken:T, attribute:T(subseq(input, i, j)))
         tokenstream(lextab, input, j + 1, result + tmp)
     else if next = "/"_1 then
     let j = consumecomment(input, i)
       if j = i then
       let tmp = token("/"_1, divop, attribute:T("/"))
         tokenstream(lextab, input, j + 1, result + tmp)
       else
        assert j < length.input report errormessage("No matching //", result + token(0, attribute:T([ next])), length.result + 1)
        let tmp = token(commenttoken:T, attribute:T(subseq(input, i, j - 1)))
         tokenstream(lextab, input, j, result + tmp)
     else       if tokenno.act=43 then 
          // user defined binary infix op // 
                tokenstream(lextab, input, i + 2, result + token(w.act,8,attribute:T([ input_(i+1),"!"_1])))
     else tokenstream(lextab, input, i + 1, result + act)

function step(input:seq.token.T, stk:stack.stkele.T, token:token.T)stack.stkele.T
 let stateno = stateno.top.stk
 let actioncode = actiontable:T_(tokenno.token + length.tokenlist:T * stateno)
  if actioncode > 0 then
  if stateno = 2 then stk
   else push(stk, stkele(actioncode, place.top.stk + 1, forward(attribute.top.stk, attribute.token)))
  else
   assert actioncode < 0 report errormessage(if w.token = "#"_1 then"parse error:unexpected end of paragraph"
   else"parse error state" + toword.stateno, input, place.top.stk)
   +"&br"+ expect:T(stateno) 
   let ruleno =-actioncode
   let rulelen = rulelength:T_ruleno
   let newstk = pop(stk, rulelen)
   let newstateno = actiontable:T_(leftside:T_ruleno + length.tokenlist:T * stateno.top.newstk)
    assert newstateno > 0 report"????"
    let newstkele = stkele(newstateno, place.top.stk, action(ruleno, input, reduction.top(stk, rulelen)))
     step(input, push(newstk, newstkele), token)

function expect:T(stateno:int)seq.word
 let l = @(+, kk:T(stateno),"", arithseq(length.tokenlist:T, 1, 1))
  toseq(asset.l - asset."-=_^∧ ∨ *")

function kk:T(stateno:int, token:int)seq.word
 if 0 ≠ actiontable:T_(length.tokenlist:T * stateno + token)then [ tokenlist:T_token]
 else empty:seq.word

Function place(R:reduction.T)int place.(toseq.R)_(length.toseq.R)

function token(tokenno:int, attribute:T)token.T token("??"_1, tokenno, attribute)

Function parse:T(input:seq.word)T
 // if parse is called many times caching lextable improves performance // parse:T(attribute:T(""), sort.lextable:T, input)

Function parse:T(initial:T, lextable:seq.token.T, input:seq.word)T
 let a = tokenstream(lextable, input + "#", 1, empty:seq.token.T)
 let stk = @(step.a, identity, push(empty:stack.stkele.T, stkele(startstate:T, 1, initial)), a)
  attribute.top.stk

Function sortedlextable:T seq.token.T sort.lextable:T



function Wtoken:T int // generated by genlex module in tools // 34 

function Itoken:T int // generated by genlex module in tools // 38 

function commenttoken:T int // generated by genlex module in tools // 11 

function stringtoken:T int // generated by genlex module in tools // 28 

function lextable:T seq.token.T // generated by genlex module in tools // [ 
token("!"_1, 43, attribute:T("!")) 
, token("#"_1, 19, attribute:T("#")) 
, token("$wordlist"_1, 34, attribute:T("$wordlist")) 
, token("'"_1, 0, attribute:T("'")) 
, token("("_1, 3, attribute:T("(")) 
, token(")"_1, 4, attribute:T(")")) 
, token("*"_1, 27, attribute:T("*")) 
, token("+"_1, 8, attribute:T("+")) 
, token(","_1, 12, attribute:T(",")) 
, token("-"_1, 8, attribute:T("-")) 
, token("."_1, 1, attribute:T(".")) 
, token("/"_1, 27, attribute:T("/")) 
, token("//"_1, 0, attribute:T("//")) 
, token("0"_1, 38, attribute:T("0")) 
, token("2"_1, 38, attribute:T("2")) 
, token(":"_1, 5, attribute:T(":")) 
, token("<"_1, 6, attribute:T("<")) 
, token("<<"_1, 6, attribute:T("<<")) 
, token("="_1, 2, attribute:T("=")) 
, token(">"_1, 6, attribute:T(">")) 
, token(">>"_1, 6, attribute:T(">>")) 
, token("?"_1, 6, attribute:T("?")) 
, token("@"_1, 29, attribute:T("@")) 
, token("@@"_1, 15, attribute:T("@@")) 
, token("A"_1, 34, attribute:T("A")) 
, token("D"_1, 34, attribute:T("D")) 
, token("E"_1, 34, attribute:T("E")) 
, token("F"_1, 34, attribute:T("F")) 
, token("FP"_1, 34, attribute:T("FP")) 
, token("Function"_1, 34, attribute:T("Function")) 
, token("G"_1, 34, attribute:T("G")) 
, token("I"_1, 34, attribute:T("I")) 
, token("K"_1, 34, attribute:T("K")) 
, token("L"_1, 34, attribute:T("L")) 
, token("N"_1, 34, attribute:T("N")) 
, token("NM"_1, 34, attribute:T("NM")) 
, token("P"_1, 34, attribute:T("P")) 
, token("T"_1, 34, attribute:T("T")) 
, token("W"_1, 34, attribute:T("W")) 
, token("["_1, 13, attribute:T("[")) 
, token("]"_1, 7, attribute:T("]")) 
, token("^"_1, 14, attribute:T("^")) 
, token("_"_1, 14, attribute:T("_")) 
, token("a"_1, 34, attribute:T("a")) 
, token("assert"_1, 23, attribute:T("assert")) 
, token("comment"_1, 34, attribute:T("comment")) 
, token("else"_1, 21, attribute:T("else")) 
, token("empty"_1, 34, attribute:T("empty")) 
, token("function"_1, 34, attribute:T("function")) 
, token("i"_1, 34, attribute:T("i")) 
, token("if"_1, 18, attribute:T("if")) 
, token("in"_1, 8, attribute:T("in")) 
, token("inst"_1, 34, attribute:T("inst")) 
, token("int"_1, 34, attribute:T("int")) 
, token("is"_1, 16, attribute:T("is")) 
, token("let"_1, 22, attribute:T("let")) 
, token("mod"_1, 27, attribute:T("mod")) 
, token("mytype"_1, 34, attribute:T("mytype")) 
, token("report"_1, 24, attribute:T("report")) 
, token("seq"_1, 34, attribute:T("seq")) 
, token("then"_1, 20, attribute:T("then")) 
, token("use"_1, 34, attribute:T("use")) 
, token("word"_1, 34, attribute:T("word")) 
, token("{"_1, 9, attribute:T("{")) 
, token("}"_1, 10, attribute:T("}")) 
, token("∈"_1, 8, attribute:T("∈")) 
, token("∋"_1, 8, attribute:T("∋")) 
, token("∧"_1, 25, attribute:T("∧")) 
, token("∨"_1, 26, attribute:T("∨")) 
, token("∩"_1, 27, attribute:T("∩")) 
, token("∪"_1, 27, attribute:T("∪")) 
, token("≠"_1, 6, attribute:T("≠")) 
, token("≤"_1, 6, attribute:T("≤")) 
, token("≥"_1, 6, attribute:T("≥")) 
, token('"'_1, 0, attribute:T('"')) 
, token(merge("&"+"and"), 25, attribute:T("∧")) 
, token(merge("&"+"cap"), 27, attribute:T("∩")) 
, token(merge("&"+"contains"), 8, attribute:T("∋")) 
, token(merge("&"+"cup"), 27, attribute:T("∪")) 
, token(merge("&"+"ge"), 6, attribute:T("≥")) 
, token(merge("&"+"in"), 8, attribute:T("∈")) 
, token(merge("&"+"le"), 6, attribute:T("≤")) 
, token(merge("&"+"ne"), 6, attribute:T("≠")) 
, token(merge("&"+"or"), 26, attribute:T("∨"))]

function rulelength:T seq.int [ 2, 7, 7, 4, 5, 1, 1, 1, 3, 3, 5, 4, 6, 1, 4, 3, 3, 6, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 4, 2, 5, 1, 3, 1, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3, 1, 4, 1, 1, 3, 10, 2, 7, 7]

function leftside:T seq.int [ 32, 33, 33, 33, 33, 33, 40, 35, 35, 35, 35, 35, 35, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 37, 37, 31, 30, 31, 31, 31, 31, 17, 17, 31, 31, 36, 36, 36, 36, 36, 36, 36, 39, 39, 39, 39, 39, 41, 41, 31, 42, 31, 31]

function tokenlist:T seq.word".=():>]-{ } comment, [_@@ is T if # then else let assert report ∧ ∨ * $wordlist @ A E G F W P N L I K FP NM D"

function startstate:T int 1

function finalstate:T int 2

noactions 2340 
nosymbols:42 
norules 58 
nostate 148

function actiontable:T seq.int [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 8, -37, -37, 0, 9, -37, 11, -37, -37, -37, -37, -37, 15, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, 13, 14, 6, -37, -37, -37, -37, 0, 0, 10, 0, 7, 0, -37, 0, 0, 16, -37, -37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -45, 0, -45, 0, 0, 0, 0, 0, 0, 0, 0, -45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -43, 0, -43, 0, 0, 0, 0, 0, 0, 0, 0, -43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -44, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, -44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -53, -53, -53, 18, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, 0, 0, -53, 0, 0, 0, -53, 0, 0, -53, -53, -42, 0, -42, 0, 0, 0, 0, 0, 0, 0, 0, -42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, -46, 0, -46, 0, 0, 0, 0, 0, 0, 0, 0, -46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -47, 0, -47, 0, 0, 0, 0, 0, 0, 0, 0, -47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -41, 0, -41, 0, 0, 0, 0, 0, 0, 0, 0, -41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 25, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, -38, -38, -38, 0, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, 0, 0, -38, 0, 0, 0, -38, 0, 0, -38, -38, 12, -37, -37, -37, 0, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, 0, 0, -37, 0, 0, 0, -37, 0, 0, -37, -37, -37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 37, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 25, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, -37, -37, -37, 50, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, 0, 0, -37, 0, 0, 0, -37, 0, 0, -37, -37, -37, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -54, -54, -54, 0, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, 0, 0, -54, 0, 0, 0, -54, 0, 0, -54, -54, -54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 53, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, -39, -39, -39, 0, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, 0, 0, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, 0, 0, -39, 0, 0, 0, -39, 0, 0, -39, -39, -39, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 55, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 56, -53, -53, -53, 18, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, 0, 0, -53, 0, 0, 0, -53, 0, 0, -53, -53, -53, 8, 0, 0, 0, 9, 0, 11, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 6, 0, 0, 0, 0, 0, 0, 10, 0, 57, 0, 0, 0, 0, 58, 0, 0, 60, 0, 0, 0, 61, 0, 62, 0, 0, 0, 0, 0, 66, 67, 0, 0, 0, -4, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 68, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 69, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 70, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 71, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 73, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 74, -35, -35, -35, 0, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, 0, 0, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, 0, 0, -35, 0, 0, 0, -35, 0, 0, -35, -35, -35, -14, 75, -14, 0, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, 0, 0, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, 0, 0, -14, 0, 0, 0, -14, 0, 0, -14, -14, -14, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 77, 0, 0, 35, 0, 0, 76, 44, 0, 0, 45, 36, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, -40, -40, 0, 61, -40, 62, -40, -40, -40, -40, -40, 66, 67, 0, 0, -40, -40, -40, -40, -40, -40, -40, 63, 64, 59, -40, -40, -40, -40, 0, 0, -40, 0, 0, 0, -40, 0, 0, -40, -40, 65, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 61, 0, 62, 0, 0, 0, 0, 0, 66, 67, 0, 0, 0, 0, 0, 0, 0, 0, 86, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 87, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 90, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 91, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 92, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 93, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 94, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 95, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 96, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 97, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, -56, 0, 0, 0, -56, 0, -56, 0, 0, 0, 0, 0, -56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -56, -56, -56, 0, 0, 0, 0, 0, 0, -56, 0, -56, 0, 0, 0, 0, -56, 0, 0, -21, -21, -21, 0, -21, -21, -21, -21, -21, -21, -21, -21, 66, 67, 0, 0, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, 0, 0, -21, 0, 0, 0, -21, 0, 0, -21, -21, -21, 60, -33, -33, 0, 61, -33, 62, -33, -33, -33, -33, -33, 66, 67, 0, 0, -33, -33, -33, -33, -33, -33, -33, 63, 64, 59, -33, -33, -33, -33, 0, 0, -33, 0, 0, 0, -33, 0, 0, -33, -33, 65, 60, 0, 0, 0, 61, 0, 62, 0, 0, 0, 0, 0, 66, 67, 0, 0, 0, 0, 98, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 60, 0, 0, 0, 61, 0, 62, 0, 99, 0, 0, 0, 66, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 8, 0, 0, 0, 9, 0, 11, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 6, 0, 0, 0, 0, 0, 0, 102, 0, 101, 0, 0, 100, 0, 103, 0, 0, 60, 0, 104, 0, 61, 0, 62, 0, 0, 0, 0, 0, 66, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 77, 0, 0, 35, 0, 0, 106, 44, 0, 0, 45, 36, 0, 0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, -29, 0, 61, -29, 62, 0, 0, 0, -29, 0, 66, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, -37, -37, -37, 112, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, 0, 0, -37, 0, 0, 0, -37, 0, 0, -37, -37, -37, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 113, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 114, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 115, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, -22, -22, -22, 0, -22, -22, -22, -22, -22, -22, -22, -22, 66, -22, 0, 0, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, 0, 0, -22, 0, 0, 0, -22, 0, 0, -22, -22, -22, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 116, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 117, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, -23, -23, -23, 0, -23, -23, -23, -23, -23, -23, -23, -23, 66, -23, 0, 0, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, 0, 0, -23, 0, 0, 0, -23, 0, 0, -23, -23, -23, -25, -25, -25, 0, -25, -25, 62, -25, -25, -25, -25, -25, 66, 67, 0, 0, -25, -25, -25, -25, -25, -25, -25, -25, -25, 59, -25, -25, -25, -25, 0, 0, -25, 0, 0, 0, -25, 0, 0, -25, -25, -25, -26, -26, -26, 0, -26, -26, 62, -26, -26, -26, -26, -26, 66, 67, 0, 0, -26, -26, -26, -26, -26, -26, -26, -26, -26, 59, -26, -26, -26, -26, 0, 0, -26, 0, 0, 0, -26, 0, 0, -26, -26, -26, -24, -24, -24, 0, -24, -24, -24, -24, -24, -24, -24, -24, 66, 67, 0, 0, -24, -24, -24, -24, -24, -24, -24, -24, -24, 59, -24, -24, -24, -24, 0, 0, -24, 0, 0, 0, -24, 0, 0, -24, -24, -24, 60, -27, -27, 0, 61, -27, 62, -27, -27, -27, -27, -27, 66, 67, 0, 0, -27, -27, -27, -27, -27, -27, -27, -27, -27, 59, -27, -27, -27, -27, 0, 0, -27, 0, 0, 0, -27, 0, 0, -27, -27, -27, 60, -28, -28, 0, 61, -28, 62, -28, -28, -28, -28, -28, 66, 67, 0, 0, -28, -28, -28, -28, -28, -28, -28, 63, -28, 59, -28, -28, -28, -28, 0, 0, -28, 0, 0, 0, -28, 0, 0, -28, -28, -28, 60, -19, -19, 0, 61, -19, 62, -19, -19, -19, -19, -19, 66, 67, 0, 0, -19, -19, -19, -19, -19, -19, -19, 63, 64, 59, -19, -19, -19, -19, 0, 0, -19, 0, 0, 0, -19, 0, 0, -19, -19, 65, -20, -20, -20, 0, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, 0, 0, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, 0, 0, -20, 0, 0, 0, -20, 0, 0, -20, -20, -20, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 118, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, -17, -17, -17, 0, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, 0, 0, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, 0, 0, -17, 0, 0, 0, -17, 0, 0, -17, -17, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 121, -53, -53, -53, 18, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, 0, 0, -53, 0, 0, 0, -53, 0, 0, -53, -53, -53, 0, 122, 0, 0, 0, 0, 0, 0, 0, 0, -52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -16, -16, -16, 0, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, 0, 0, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, 0, 0, -16, 0, 0, 0, -16, 0, 0, -16, -16, -16, -36, -36, -36, 0, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, 0, 0, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, 0, 0, -36, 0, 0, 0, -36, 0, 0, -36, -36, -36, 0, 0, 123, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -31, -31, -31, 0, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, 0, 0, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, 0, 0, -31, 0, 0, 0, -31, 0, 0, -31, -31, -31, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 124, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 125, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, -12, 0, 0, 0, 0, 0, 0, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 61, 0, 62, 0, 0, 0, 0, 0, 66, 67, 0, 0, 0, -3, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 60, -32, 0, 0, 61, 0, 62, -32, 0, -32, 0, -32, 66, 67, 0, 0, -32, 0, 0, 0, -32, -32, 0, 63, 64, 59, -32, -32, -32, -32, 0, 0, -32, 0, 0, 0, -32, 0, 0, -32, -32, 65, 60, 43, 0, 0, 61, 0, 129, 41, 0, 31, 0, 46, 66, 67, 0, 0, 40, 0, 0, 0, 32, 34, 0, 63, 64, 59, 33, 42, 39, 128, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 65, 60, 0, 0, 0, 61, 0, 62, 0, 0, 0, 130, 0, 66, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 60, 0, 0, 0, 61, 0, 62, 0, 0, 0, 131, 0, 66, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 60, 0, 0, 0, 61, 0, 62, 0, 0, 0, 0, 0, 66, 67, 0, 0, 0, 0, 0, 132, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 8, 0, 0, 0, 9, 0, 11, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 6, 0, 0, 0, 0, 0, 0, 102, 0, 101, 0, 0, 133, 0, 103, 0, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 134, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 135, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 77, 0, 0, 35, 0, 0, 136, 44, 0, 0, 45, 36, 0, -15, -15, -15, 0, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, 0, 0, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, 0, 0, -15, 0, 0, 0, -15, 0, 0, -15, -15, -15, 60, 0, -30, 0, 61, -30, 62, 0, 0, 0, -30, 0, 66, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 60, 0, 0, 0, 61, 0, 62, 0, 0, 0, 0, 0, 66, 67, 0, 0, 0, -2, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, 0, 0, 0, -11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, -34, -34, 0, 61, -34, 62, -34, -34, -34, -34, -34, 66, 67, 0, 0, -34, -34, -34, -34, -34, -34, -34, 63, 64, 59, -34, -34, -34, -34, 0, 0, -34, 0, 0, 0, -34, 0, 0, -34, -34, 65, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 138, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 77, 0, 0, 35, 0, 0, 139, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 77, 0, 0, 35, 0, 0, 140, 44, 0, 0, 45, 36, 0, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 141, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 61, 0, 62, 0, 0, 0, -49, 0, 66, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 60, 0, 0, 0, 61, 0, 62, 0, 0, 0, -48, 0, 66, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 143, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -13, 0, 0, 0, 0, 0, 0, 0, -13, 0, 0, 0, 0, 0, 0, -13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -24, -24, -24, 0, -24, -24, -24, -24, -24, -24, -24, -24, 66, 67, 0, 0, -24, -24, -24, -24, -24, -24, -24, -24, -24, -21, -24, -24, -24, -24, 0, 0, -24, 0, 0, 0, -24, 0, 0, -24, -24, -24, 0, 0, 144, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 145, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, -18, -18, 0, 61, -18, 62, -18, -18, -18, -18, -18, 66, 67, 0, 0, -18, -18, -18, -18, -18, -18, -18, 63, 64, 59, -18, -18, -18, -18, 0, 0, -18, 0, 0, 0, -18, 0, 0, -18, -18, 65, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 146, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -58, -58, -58, 0, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, 0, 0, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, 0, 0, -58, 0, 0, 0, -58, 0, 0, -58, -58, -58, -57, -57, -57, 0, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, 0, 0, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, 0, 0, -57, 0, 0, 0, -57, 0, 0, -57, -57, -57, 60, 0, 0, 0, 61, 0, 62, 0, 0, 0, 147, 0, 66, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 43, 0, 0, 0, 0, 38, 41, 0, 31, 0, 46, 0, 0, 0, 0, 40, 0, 0, 0, 32, 34, 0, 0, 0, 0, 33, 42, 39, 148, 0, 0, 35, 0, 0, 0, 44, 0, 0, 45, 36, 0, 60, 0, 149, 0, 61, 0, 62, 0, 0, 0, 0, 0, 66, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63, 64, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, -55, -55, -55, 0, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, 0, 0, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, 0, 0, -55, 0, 0, 0, -55, 0, 0, -55, -55, -55]


